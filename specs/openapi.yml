openapi: 3.0.3
info:
  title: Kotlin API
  description: Kotlin API Reference.
  termsOfService: https://xxxx.jp/
  contact:
    name: aaa
    url: https://www.aaa.ne.jp
    email: aaa@gmail.com
  license:
    name: aaa Co. Ltd
    url: https://www.aaa.ne.jp
  version: 1.0.0
servers:
  - url: http://localhost:8080/api

paths:

  /users:
    get:
      summary: ユーザー一覧取得
      description: |
        ユーザーのリストを返します
      operationId: getUsers
      responses:
        200:
          description: 成功時
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
    post:
      summary: ユーザー登録
      description: |
        ユーザーを登録します
      operationId: createUsers
      responses:
        200:
          description: 成功時
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{userId}:
    get:
      summary: ユーザー取得
      description: |
        指定されたID（ユーザー）のユーザーに関する様々な情報を返します
      operationId: getUserByID
      parameters:
        - name: userId
          in: path
          description: userId
          required: true
          schema:
            type: string
      responses:
        200:
          description: 成功時
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          $ref: "#/components/responses/NotFound"

components:
  schemas:

    Page:
      type: object
      required:
        - now_page
        - result_count
        - total_count
      properties:
        now_page:
          type: integer
          format: int32
          example: 0
          description: 現在のページ
        result_count:
          type: integer
          format: int32
          example: 10
          description: ページ内件数
        total_count:
          type: integer
          format: int64
          example: 1234
          description: 全体数

    User:
      type: object
      properties:
        user_id:
          type: string
          example: XXXX
          description: firebaseのユーザーID
        user_name:
          type: string
          example: XXXX
          description: ユーザー名

    Users:
      type: object
      allOf:
        - $ref: '#/components/schemas/Page'
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/User'

    Error:
      type: object
      properties:
        timestamp:
          type: string
        status:
          type: string
        error:
          type: string
        message:
          type: string
        detail:
          type: string
        path:
          type: string
      required:
        - timestamp
        - status
        - error
        - path

  responses:
    BadRequest:
      description: "BadRequest"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Forbidden:
      description: "Forbidden – The server understood the request, but is refusing it or the
        access is not allowed"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFound:
      description: "Not found – There is no resource behind the URI"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    InternalServerError:
      description: "Internal server error"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"